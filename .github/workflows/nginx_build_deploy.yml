name: CI/CD for Nginx - VPS Deployment

on:
  push:
    branches:
      - main
    paths:
      - 'infrastructure/nginx/**'
      - '.github/workflows/nginx_build_deploy.yml'

jobs:
  nginx-build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          touch ~/.ssh/known_hosts

      - name: Add SSH key to known_hosts
        run: |
          ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts

      - name: Debug SSH connection
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
        run: |
          echo "$SSH_KEY" > ssh_key
          chmod 600 ssh_key
          ssh -vvv -i ssh_key ${{ secrets.USERNAME }}@${{ secrets.HOST }} echo "Connection successful"

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./infrastructure/nginx
          file: ./infrastructure/nginx/Dockerfile
          push: true
          tags: artur741/nginx-container:latest

      - name: Copy nginx to VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          source: "infrastructure/nginx/"
          target: "/opt/hooraytalk/nginx"

      - name: Deploy containers on VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script: |
            cd /opt/hooraytalk/nginx
            echo "${{ secrets.SSL_CERTIFICATE }}" > ./ssl/hooraytalk.crt
            echo "${{ secrets.SSL_KEY }}" > ./ssl/hooraytalk.key
            docker-compose down
            docker-compose pull nginx-container
            docker-compose up -d
