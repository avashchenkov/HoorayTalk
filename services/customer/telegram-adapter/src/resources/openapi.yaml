openapi: 3.0.0
info:
  title: HoorayTalk Telegram Customer Adapter API
  description: This is the HoorayTalk Telegram Customer Adapter API specification for internal use.
  license:
    name: MIT License (MIT)
    url: https://opensource.org/licenses/MIT
  version: 1.0.0
servers:
  - url: https://telegram-customer-adapter:443/v1
tags:
  - name: message
    description: Message operations
  - name: health
    description: Health check operations
  - name: configuration
    description: Configuration operations
paths:
  /message:
    post:
      tags:
        - message
      summary: Send a message to the customer via Telegram Bot API
      description: Send a message to the customer via Telegram Bot API
      operationId: sendMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendMessageRequest'
        required: true
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
      security:
        - IntraServiceApiKeyAuth: [ ]
  /health:
    get:
      tags:
        - health
      summary: Service health check
      description: Service health check endpoint to verify the service is running
      operationId: getHealthStatus
      responses:
        '200':
          description: Service is healthy
        '401':
          description: Unauthorized
      security:
        - IntraServiceApiKeyAuth: [ ]
  /bots:
    post:
      tags:
        - configuration
      summary: Set bot configurations
      description: |
        "Set Bots' Configurations" endpoint accepts multiple bot ID and token pairs,
        updating their configurations in bulk. It overwrites existing settings, ensuring
        bots run with the latest configurations through a single request. This facilitates
        efficient management and operation of multiple bots, streamlining their setup and updates.
        operationId: setBots
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BotsRequest'
        required: true
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
      security:
        - IntraServiceApiKeyAuth: [ ]
components:
  schemas:
    SendMessageRequest:
      type: object
      required:
        - bot_id
        - chat_id
        - message
      properties:
        bot_id:
          type: string
          description: Unique identifier of the bot
        chat_id:
          type: string
          description: Unique identifier of the target chat
        message:
          type: string
          description: Text of the message to be sent to the customer
    BotsRequest:
      type: object
      properties:
        bots:
          type: array
          items:
            type: object
            properties:
              bot_id:
                type: string
                description: Unique identifier of the bot
              token:
                type: string
                description: Bot token
  securitySchemes:
    IntraServiceApiKeyAuth:
      type: apiKey
      name: API-KEY
      in: header
