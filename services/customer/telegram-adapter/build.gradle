import org.liquibase.gradle.LiquibaseTask

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'org.openapi.generator' version '7.4.0'
	id 'org.springframework.cloud.contract' version '4.1.2'
	id 'org.liquibase.gradle' version '2.2.1'
}

group = 'delivery.hooray'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

repositories {
	mavenCentral()
}

ext {
	set('springBootVersion', '3.2.4')
	set('springCloudVersion', '4.1.2')
	set('springMockMvcVersion', '5.4.0')
	set('springdocVersion', '1.6.14')

	set('jacksonDatabindNullableVersion', '0.2.6')

	set('liquibaseVersion', '4.27.0')

	set('hibernateVersion', '6.4.4.Final')

	set('jasyptVersion', '1.9.3')
	set('jasyptSpringBootVersion', '3.0.5')

	set('telegramBotsVersion', '6.9.7.1')

	set('nettyVersion', '4.1.109.Final')
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation "org.springdoc:springdoc-openapi-ui:${springdocVersion}"
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	implementation "org.hibernate:hibernate-core:${hibernateVersion}"

	implementation "org.openapitools:jackson-databind-nullable:${jacksonDatabindNullableVersion}"

	implementation "org.liquibase:liquibase-core:${liquibaseVersion}"
	implementation 'info.picocli:picocli:4.7.5'

	implementation 'org.postgresql:postgresql'

	implementation "org.jasypt:jasypt:${jasyptVersion}"
	implementation "com.github.ulisesbocchio:jasypt-spring-boot-starter:${jasyptSpringBootVersion}"

	implementation "org.telegram:telegrambots:${telegramBotsVersion}"

	runtimeOnly "io.netty:netty-resolver-dns-native-macos:${nettyVersion}:osx-aarch_64"

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation "org.springframework.cloud:spring-cloud-starter-contract-verifier:${springCloudVersion}"
	testImplementation "org.springframework.cloud:spring-cloud-contract-spec:${springCloudVersion}"
	testImplementation "io.rest-assured:spring-mock-mvc:${springMockMvcVersion}"
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

openApiGenerate {
	generatorName = 'spring'
	inputSpec = "${rootDir}/services/customer/telegram-adapter/src/main/resources/openapi.yaml".toString()
	outputDir = layout.buildDirectory.dir('generated').get().asFile.absolutePath
	apiPackage = 'delivery.hooray.telegramadapter.api'
	modelPackage = 'delivery.hooray.telegramadapter.model'
	invokerPackage = 'delivery.hooray.telegramadapter.invoker'
	configOptions = [
			interfaceOnly : 'true',
			useTags: 'true',
			useBeanValidation: 'true',
			performBeanValidation: 'true',
			dateLibrary: 'java8',
			library: 'spring-boot',
			useSpringBoot3: 'true'
	]
}

sourceSets {
	main {
		java {
			srcDirs 'src/main/java', "$buildDir/generated/src/main/java"
		}
	}
}

tasks.named('compileJava').configure {
	dependsOn tasks.named('openApiGenerate')
}

jar {
	archiveBaseName.set('openapi-spring')
	archiveVersion.set('1.0.0')
	manifest {
		attributes(
				'Implementation-Title': 'openapi-spring',
				'Implementation-Version': archiveVersion.get()
		)
	}
	exclude 'db/changelog/**'
}

contracts {
	baseClassForTests = 'delivery.hooray.telegramadapter.TelegramAdapterApplicationTests'
}

test {
	dependsOn 'generateContractTests'
}

liquibase {
	activities {
		main {
			changeLogFile 'src/main/resources/db/changelog/db.changelog-master.xml'
			url 'jdbc:postgresql://localhost:5432/telegram_adapter_dev'
			username 'postgres'
			password 'postgres'
			classpath 'src/main/resources'
		}
	}
	runList = 'main'
}

configurations {
	liquibaseRuntime.extendsFrom implementation
}

tasks.withType(LiquibaseTask) {
	classpath = configurations.liquibaseRuntime
}
